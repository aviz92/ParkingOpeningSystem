"""
Django settings for MainParkingOpeningSystem project.

Generated by 'django-admin startproject' using Django 3.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import logging
import ldap
from django_auth_ldap.config import LDAPSearch
import socket

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
MEDIA_ROOT = os.path.join(BASE_DIR, 'Django_Upload_Files')
MEDIA_URL = '/Django_Upload_Files/'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '$3w%&f-x&)+axjegvh%$thtrlitdzk!v3_%@dznw+*judd3a5i'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ADMINS = [('Avi Zaguri', 'azaguri@airspan.com')]

django_allowed_hosts = [
    '127.0.0.1', 'localhost',
    'asil-azaguri', 'asil-azaguri1', 'asil-azaguri2',
]
# django_allowed_hosts = ['127.0.0.1', 'localhost', 'asil-azaguri']

react_allowed_hosts = (
    'http://localhost', 'http://127.0.0.1',
    'http://asil-azaguri', 'http://asil-azaguri1', 'http://asil-azaguri2',
)

ALLOWED_HOSTS = django_allowed_hosts

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'django_extensions',
    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken',

    'django_mptt_admin',

    'ApartmentOwnerApp',
    'ApartmentNumberApp',
    'ParkingNumberApp',
    'CarNumberApp',
    'MotorcycleNumberApp',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

CORS_ORIGIN_WHITELIST = react_allowed_hosts

ROOT_URLCONF = 'MainParkingOpeningSystem.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'MainParkingOpeningSystem.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

hostname = socket.gethostname()
try:
    project_name = os.path.dirname(__file__).split("\\")[-2]
except Exception:
    project_name = os.path.dirname(__file__).split("/")[-2]


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


REST_FRAMEWORK = {
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema',
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.AllowAny',
        # 'rest_framework.permissions.IsAuthenticated',
    )
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

""" LDAP """
AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    "django_auth_ldap.backend.LDAPBackend",
]

AUTH_LDAP_SERVER_URI = "ldap://10.3.10.5:3268"
AUTH_LDAP_BIND_DN = "CN=spuser,OU=Services Accounts,OU=Tel Aviv,DC=airspan,DC=com"
AUTH_LDAP_BIND_PASSWORD = "sp_user9"
AUTH_LDAP_USER_SEARCH = LDAPSearch(
    "OU=UsersAirspan,DC=airspan,DC=com", ldap.SCOPE_SUBTREE, "(sAMAccountName=%(user)s)",
)

AUTH_LDAP_USER_ATTR_MAP = {
    "username": "sAMAccountName",
    "first_name": "givenName",
    "last_name": "sn",
    "email": "mail",
}

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {"console": {"class": "logging.StreamHandler"}},
    "loggers": {"django_auth_ldap": {"level": "DEBUG", "handlers": ["console"]}},
}
